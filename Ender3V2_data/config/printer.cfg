# This file contains pin mappings for the stock 2020 Creality Ender 3
# V2. To use this config, during "make menuconfig" select the
# STM32F103 with a "28KiB bootloader" and serial (on USART1 PA10/PA9)
# communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

[include mainsail.cfg]

[include KAMP_Settings.cfg]

[exclude_object]

[virtual_sdcard]
path: /home/pi/Ender3V2_data/gcodes
on_error_gcode: CANCEL_PRINT

[display_status]

[pause_resume]

#[mcu rpi]
#serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
    #117.5, 117.5, 20  # an example

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: 0
position_max: 249
homing_speed: 50

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: 0
position_max: 232.8
homing_speed: 50

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 250
position_min: -2

[filament_motion_sensor btt_smartie]
detection_length: 7.0
extruder: extruder
switch_pin: PA4
runout_gcode: FILAMENT_RUNOUT

[extruder]
max_extrude_only_distance: 100.0
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 7.84
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
#control: pid
# tuned for stock hardware with 200 degree Celsius target
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 275
pressure_advance: .04
max_extrude_cross_section: 5

[firmware_retraction]
retract_length: 1
#  The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 45
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 45
#   The speed of unretraction, in mm/s. The default is 10 mm/s.


[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
# tuned for stock hardware with 50 degree Celsius target
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
#max_accel: 10000
#max_accel_to_decel: 10000
max_z_velocity: 5
max_z_accel: 100

[input_shaper]
shaper_freq_x: 36
shaper_freq_y: 35
shaper_type_y: mzv
shaper_type_x: mzv

[bltouch]
sensor_pin: ^PB1
control_pin: PB0
x_offset: -44
y_offset: -10.5
samples: 3
#z_offset: 2
probe_with_touch_mode: True

[safe_z_home]
home_xy_position: 159.5, 126.5  # Change coordinates to the center of your print bed
z_hop: 10 # Move up 10mm
z_hop_speed: 5

[bed_mesh]
mesh_pps: 0, 0
speed: 120
horizontal_move_z: 5
mesh_min: 0, 0
mesh_max: 203, 221.8
probe_count: 5, 5
algorithm: bicubic
fade_start: 0.6
fade_end: 10
fade_target: 0

[screws_tilt_adjust]
screw1: 72, 34.5
screw1_name: front left screw
screw2: 243, 34.5
screw2_name: front right screw
screw3: 243, 204.5
screw3_name: rear right screw
screw4: 72, 204.5
screw4_name: rear left screw
horizontal_move_z: 10
speed: 50
screw_thread: CW-M4

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 0
max_temp: 85


#Macro section
[gcode_macro FILAMENT_RUNOUT]
gcode:
  #M300 S1 P10
  M600
  #M300 S1 P10


#[gcode_macro M300]
#gcode:
  #{% set S = params.S|default(1000)|int %}
  #{% set P = params.P|default(100)|int %}
      #SET_PIN PIN=BEEPER VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
  #G4 P{P}
      #SET_PIN PIN=BEEPER VALUE=0

[gcode_macro M600]
gcode:
  {% set X = params.X|default(25)|float %}
  {% set Y = params.Y|default(25)|float %}
  {% set Z = params.Z|default(10)|float %}
      SAVE_GCODE_STATE NAME=M600_state
      CANCEL_PRINT
  G91
  G1 E-.8 F2700
  G1 Z{Z}
  G90
  G1 X{X} Y{Y} F3000
  G91
  G1 E-15 F1000
      RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro PIDtuneHOTEND]

gcode:
    {% set TEMP = params.TEMP|default(200)|float %}
    PID_CALIBRATE HEATER=extruder TARGET={TEMP}

[gcode_macro PIDtuneBED]

gcode:
    {% set TEMP = params.TEMP|default(60)|float %}
    PID_CALIBRATE HEATER=heater_bed TARGET={TEMP}



[gcode_macro BLTOUCH_Z_Offset]

description: start process because I'm forgetful 
gcode:
    G28
    probe_calibrate

[gcode_macro BLTOUCH_PIN_UP]
gcode:
    BLTOUCH_DEBUG COMMAND=pin_up

[gcode_macro BLTOUCH_PIN_DOWN]
gcode:
    BLTOUCH_DEBUG COMMAND=pin_down

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro G29]
gcode:
 G28
 BED_MESH_CALIBRATE
 G1 X0 Y0 Z5 F4000

[gcode_macro LOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    SAVE_GCODE_STATE NAME=load_state
    #M300 # beep
    G91
    G92 E0
    G1 E350 F{max_velocity} # fast-load
    G1 E25 F{speed} # purge
    #M300
    #M300
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    #M300 # beep
    G92 E0
    G1 E25 F{speed} # purge
    G1 E-420 F{max_velocity} # fast-unload
    #M300
    #M300
    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh -c \"$0\""
timeout: 90.0
verbose: True

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 3.520
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.568333, -0.316667, -0.075833, 0.228333, 0.520833
#*# 	  -0.553333, -0.292500, -0.056667, 0.295000, 0.598333
#*# 	  -0.568333, -0.300000, -0.009167, 0.250833, 0.519167
#*# tension = 0.2
#*# min_x = 8.0
#*# algo = direct
#*# y_count = 3
#*# mesh_y_pps = 0
#*# min_y = 98.0
#*# x_count = 5
#*# max_y = 132.0
#*# mesh_x_pps = 0
#*# max_x = 203.0
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 21.073
#*# pid_ki = 0.867
#*# pid_kd = 128.020
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 75.238
#*# pid_ki = 1.666
#*# pid_kd = 849.246
